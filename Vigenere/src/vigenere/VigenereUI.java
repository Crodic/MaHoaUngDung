/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vigenere;

/**
 *
 * @author Crodic
 */
public class VigenereUI extends javax.swing.JFrame {

    /**
     * Creates new form VigenereUI
     */
    public VigenereUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vigenere Cipher");
        setBackground(new java.awt.Color(0, 188, 212));

        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField1.setName(""); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Plain Text");

        jLabel2.setText("Cipher Text");

        jTextField3.setSelectedTextColor(new java.awt.Color(244, 67, 54));

        jLabel3.setText("Key");

        jButton1.setBackground(new java.awt.Color(237, 55, 55));
        jButton1.setText("Encrypt");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(7, 55, 245));
        jButton2.setText("Decrypt");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("After Key");

        jTextField4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jTextField4.setDisabledTextColor(new java.awt.Color(242, 10, 10));
        jTextField4.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(12, 12, 12)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                            .addComponent(jTextField4))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jButton1)
                        .addGap(67, 67, 67)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String ASCII = "abcdefghijklmnopqrstuvwxyz";
        String plainText = jTextField1.getText(); //Lấy value plainText
        String key = jTextField3.getText(); //Lấy value Key

        //Chuyển toàn bộ plainText sang chữ thường
        plainText = plainText.toLowerCase();
        String encryption = ""; //Biến để lưu kết quả
        
        //Nếu plainText hoặc key rỗng thì sẽ dừng chương trình
        if(plainText.length()==0 || key.length() == 0){
            return;
        }
        
        //Nếu plainText dài hơn Key
        if(plainText.length() > key.length()) {
            int keyLength = plainText.length() - key.length(); //Tìm độ dài còn thiếu
            //Vòng lặp for để đệm thêm phần còn thiếu vào key
            for(int add = 0; add <= keyLength - 1; add++) {
              	key += key.charAt(add % key.length()); //Đệm ký tự đầu tiên của key vào cuối key
                //VD: Vòng lặp đang là 0 
                //key = abc => key.charAt(0 % 2) => key.charAt(0) => a
            }
	}
        jTextField4.setText(key); //Gán biến key mới vào UI hiển thị cho người dùng
        
        //Dùng vòng lặp for để duyệt qua từng ký tự.
	for(int i = 0; i < key.length(); i++) {
            int positionCode = ASCII.indexOf(plainText.charAt(i)); //Tìm vị trí của từng từ của plainText trong mảng
            
            //IndexOf sẽ trả về -1 nếu từ đó không tồn tại trong mảng
            if(positionCode == -1){
                encryption += plainText.charAt(i); //Nếu từ đó không tồn tại sẽ gán lại từ đó vào chuỗi và tiếp tục vòng lặp mới
                continue;
            }
            int positionKey = ASCII.indexOf(key.charAt(i)); //Tìm vị trí của từng từ của Key trong mảng
            int result = (positionCode + positionKey) % 26; //thực hiện phép cộng 2 giá trị vừa tìm được
            //Vì result luôn luôn trả về giá trị nhỏ hơn 26 nên không cần bắt lỗi
            char afterEncrypt = ASCII.charAt(result); //Tìm từ có giá trị result trong mảng
            encryption += afterEncrypt; //Thực hiện cộng các ký tự lại
	}
	jTextField2.setText(encryption); //Gán kết quả vào UI cho người dùng
        jTextField1.setText(""); //Clear PlaintText trên UI
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Tương tự như trên
        String ASCII = "abcdefghijklmnopqrstuvwxyz";
        String cipherText = jTextField2.getText();
        String key = jTextField3.getText();
        
        cipherText = cipherText.toLowerCase();
        String decryption = "";
        if(cipherText.length()==0 || key.length() == 0){
            return;
        }
        if(cipherText.length() > key.length()) {
            int keyLength = cipherText.length() - key.length();
            for(int add = 0; add <= keyLength; add++) {
              	key += key.charAt(add % key.length());
            }
	}
        jTextField4.setText(key);

	for(int i = 0; i < key.length(); i++) {
            int positionCode = ASCII.indexOf(cipherText.charAt(i));
            if(positionCode == -1){
                decryption += cipherText.charAt(i);
                continue;
            }
            int positionKey = ASCII.indexOf(key.charAt(i));
            int result = (positionCode - positionKey) % 26; //Thực hiện phép trừ thay vì phép cộng
            //Vì result sẽ có khả năng là số âm nên thực hiện bắt lỗi
            if(result < 0){
                result = result + 26;
            }
            char afterDecrypt = ASCII.charAt(result);
            decryption += afterDecrypt; 				
	}
	jTextField1.setText(decryption);
        jTextField2.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VigenereUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VigenereUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VigenereUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VigenereUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VigenereUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
